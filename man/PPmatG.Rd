% Generated by roxygen2 (4.0.0): do not edit by hand
\name{PPmatG}
\alias{PPmatG}
\title{Plotting positions of a matrix of data}
\usage{
PPmatG(mat, cols = NULL, fit.lines = "gev", ff = seq(0.005, 0.995, by =
  0.0025), yll = NULL, timeGrid = TRUE, ...)
}
\arguments{
\item{mat}{matrix of data}

\item{cols}{colour in which the data points of each column (and estimated line) should be dislayed}

\item{fit.lines}{a character string indicating the distribution to be used to draw the fitted line.
Current options are "gev" (default), "glo", "gamma" and "none" which results in no lines}

\item{ff}{the non-exceedance probabilities for which the lines are estimated.
It also affects the width of the x-axis. Defaul is \code{seq(0.005,0.995,by=0.0025)}.}

\item{yll}{ylimits (optional)}

\item{timeGrid}{logical. Should a time grid with years corrsponding to key non-excedances be dispalyed.}
}
\value{
A plot with the plotting positions of each column and a matrix of the estimated parameters
}
\description{
This can be useful when building DDF models.
It takes each columns of a matrix and plots them as Gringorten plotting positions.
The x-axis is shown using the Gumbel variate \code{-log(-log(f))}, with f the non exceedance probability
If a distribution is given to fit.lines, it adds an estimated return level curve based on L-moments estimate
}
\examples{
x <- matrix(c(rgev(20, 10, 3,   -0.2),
              rgev(20, 15, 4.5, -0.2),
              rgev(20, 40, 6.5, -0.2)),byrow = FALSE, ncol=3)
library(lmom)
PPmatG(x, cols = c(4,5,2), fit.lines = "gev")
}

